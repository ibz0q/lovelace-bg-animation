version: v1
metadata:
  name: Green Circuit
  description: I'm in
  author: Jared Stanley
  source: https://codepen.io/ykob/pen/YewoRz
  contributors:
    - name: Sjors Kaagman
      profile: https://github.com/SjorsMaster
parameters:
  - name: textColor
    default: rgba(22,222,82,0.6992)
    description: The color of the dots
    type: string
    behavior: replacement

helpers:
  insert_baseurl: true
template: >
  <!doctype html>

  <html lang="en">
    <head>
      <style>
        body {
          background-color: #0f0f0f;
        }
      </style>
    </head>
    <body>
      <canvas id="c"></canvas>
      <script>
        let arr = [];
        //
        let b_canvas,
          contxt,
          curX = 0,
          curY = 0,
          size = 0.515,
          distance = 2,
          dotCount = 1333,
          speedMax = 1.0,
          dotArray = [];
        let clr = "{{parameter: textColor}}";
        //
        window.onload = function () {
          start();
        };
        //
        function start() {
          b_canvas = document.getElementById("c");
          contxt = b_canvas.getContext("2d");
          let width = (w = b_canvas.width = window.innerWidth);
          let height = (h = b_canvas.height = window.innerHeight);
          contxt.fillStyle = clr;
          createDots();
          interval();
        }

        function interval() {
          requestAnimationFrame(interval);
          update();
        }

        function update() {
          // contxt.clearRect(0, 0, w * 11, h * 11);
          dotArray.forEach(function (item) {
            move(item);

            contxt.beginPath();
            contxt.arc(item.x, item.y, item.rad, 0, 2 * Math.PI, false);
            contxt.fill();
          });
        }

        function move(itm) {
          itm.iteration++;

          if (itm.iteration < itm.totalIterations) {
            itm.x = easeInOutQuart(
              itm.iteration,
              itm.curSpot.x,
              itm.tgt.x - itm.curSpot.x,
              itm.totalIterations,
            );
            itm.y = easeInOutQuart(
              itm.iteration,
              itm.curSpot.y,
              itm.tgt.y - itm.curSpot.y,
              itm.totalIterations,
            );
            if (itm.i == 0) {
              // console.log(itm.x);
            }
          } else {
            // console.log('test');
            itm.iteration = 0;
            // itm.curSpot.x = itm.tgt.x;
            itm.curSpot.y = itm.tgt.y;
            // itm.tgt.x = Math.random()*w;
            itm.tgt.y = Math.random() * h;
          }
        }

        function createDots() {
          var rad;
          var dot;
          for (var i = 0; i < dotCount; i++) {
            rad = size;
            dot = new Dot(i, rad, i * distance * 2, 0, Math.random() * speedMax);
            dotArray.push(dot);
          }
        }
        //
        function Dot(i, rad, x, y, speed) {
          this.i = i;
          this.rad = rad;
          this.x = x;
          this.y = y;
          this.iteration = 0;
          this.totalIterations = Math.floor(Math.random() * 140);
          // this.color=clr;
          this.curSpot = {
            x: this.x,
            y: this.y,
          };
          this.tgt = {
            x: this.x,
            y: Math.random() * h,
          };
        }
        //
        function easeInOutQuart(t, b, c, d) {
          if ((t /= d / 2) < 1) return (c / 2) * t * t * t * t + b;
          return (-c / 2) * ((t -= 2) * t * t * t - 2) + b;
        }
      </script>
    </body>
  </html>
